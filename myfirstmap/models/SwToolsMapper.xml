<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SwToolsMapper">  
  <select id="selectSwToolsList">
      SELECT 
        swt_code
        , swt_toolname
        , swt_function
        , swt_imagepath
        , swt_big_imgpath
        , swt_comments
        , swt_demo_site
        , swt_manual_path
        , swt_github_url
        , reg_date
      FROM react.react_swtool
      <if test="is_Swtcode != null && is_Swtcode != ''">
        WHERE swt_code = #{is_Swtcode}
      </if>
      ORDER BY update_date DESC

  </select>

  <select id="selectTracking">
    SELECT
        time
        , c_address
        , c_coor_x
        , c_coor_y

    FROM react.tracking

    
    
  </select>



  <select id="selectPreference">

    SELECT distinct p_address, p_coor_x, p_coor_y

    FROM react.preference_location

    
    
  </select>
  
<!-- sql문구 -->
  <insert id="insertSwToolsInfo1"> 
    INSERT INTO react.tracking
    (
        time
        , c_address
        , c_coor_x
        , c_coor_y
    )
    VALUES (
      #{is_time}
      , #{is_c_address}      
      , #{is_c_coor_x}
      , #{is_c_coor_y}
    )
  </insert>


    <insert id="insertSwToolsInfo2"> 
    INSERT INTO react.preference_location
    (
        
        p_address
        , p_coor_x
        , p_coor_y
    )
    VALUES (
      
      #{is_p_address}      
      , #{is_p_coor_x}
      , #{is_p_coor_y}
    )


  </insert>



  <insert id="insertRegister"> 
    INSERT INTO react.user
    (
        id
        , pw
        , name
        , bod
    )
    VALUES (
      #{is_id}
      , #{is_pw}      
      , #{is_name}
      , #{is_bod}
    )
  </insert>


  <!-- <delete id="deletePrefer">
    DELETE FROM react.preference_location
    WHERE p_address = #{is_SwtCd}
  </delete> -->


  <!-- <insert id="insertSwToolsInfo"> 
    INSERT INTO react.react_swtool
    (
        swt_code
        , swt_toolname
        , swt_function
        , swt_comments
        , swt_demo_site
        , swt_github_url
        <if test="is_LabelImg != null && is_LabelImg != ''">
          , swt_imagepath
        </if>
        <if test="is_MainImg != null && is_MainImg != ''">
          , swt_big_imgpath
        </if>
        <if test="is_MenualName != null && is_MenualName != ''">
          , swt_manual_path
        </if>
        , reg_date
        , reg_user
        , update_date
        , update_user
    )
    VALUES (
      CONCAT('USW', DATE_FORMAT(now(), '%Y%m%d%H%i%s'))
      , #{is_Swt_toolname}
      , #{is_Swt_function}      
      , #{is_Comments}
      , #{is_Swt_demo_site}
      , #{is_Giturl}
      <if test="is_LabelImg != null && is_LabelImg != ''">
        , #{is_LabelImg}
      </if>
      <if test="is_MainImg != null && is_MainImg != ''">
        , #{is_MainImg}
      </if>
      <if test="is_MenualName != null && is_MenualName != ''">
        , #{is_MenualName}
      </if>
      , DATE_FORMAT(now(), '%Y%m%d%H%i%s')
      , #{is_Email}
      , DATE_FORMAT(now(), '%Y%m%d%H%i%s')
      , #{is_Email}
    )
  </insert> -->

  <update id="updateSwToolsInfo"> 
    UPDATE react.react_swtool
    SET
        swt_toolname = #{is_Swt_toolname}
        , swt_function = #{is_Swt_function}
        , swt_comments = #{is_Comments}
        , swt_demo_site = #{is_Swt_demo_site}
        , swt_github_url = #{is_Giturl}
        <if test="is_LabelImg != null && is_LabelImg != ''">
          , swt_imagepath = #{is_LabelImg}
        </if>
        <if test="is_MainImg != null && is_MainImg != ''">
          , swt_big_imgpath = #{is_MainImg}
        </if>
        <if test="is_MenualName != null && is_MenualName != ''">
          , swt_manual_path = #{is_MenualName}
        </if>
        , update_date = DATE_FORMAT(now(), '%Y%m%d%H%i%s')
        , update_user = #{is_Email}
    WHERE swt_code = #{is_beforeSwtcode}
  </update>

  <delete id="deleteSwToolsInfo">
    DELETE FROM react.react_swtool
    WHERE swt_code = #{is_SwtCd}
  </delete>

  <delete id="deletePrefer">
    DELETE FROM react.preference_location
    WHERE p_address = #{is_p_address} 
  </delete>




</mapper>
